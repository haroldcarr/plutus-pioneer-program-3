#+OPTIONS:     H:6 num:nil toc:nil \n:nil @:t ::t |:t ^:t f:t TeX:t ...

------------------------------------------------------------------------------
* Plutus Env: Setup Starter Pack

https://docs.google.com/document/d/13112LHG9vVvNUs40oZSqZ-DF6_yFiT_SJZ2NaEmjMM4/edit#heading=h.hf7iqqtf4s2t

https://playground.plutus.iohkdev.io/
- easiest : the online playground

** local Plutus development environment

https://docs.plutus-community.com/
- PROS : detailed setup guide for various OS (Linux, Mac, Windows)
- CONS : later material (lectures and PAB related stuff) is mostly obsolete

https://developers.cardano.org/docs/smart-contracts/plutus/
- PROS : focused on big picture explanations of plutus
- CONS : not user friendly

https://github.com/input-output-hk/plutus-apps
- PROS : the canonical source; sparse but reliable instructions on installing plutus applications
         with NIX (e.g., Plutus Playground or Plutus PAB)
         What the development team uses.
- CONS : requires Nix

https://github.com/input-output-hk/plutus-starter
- PROS : for users of VSCode and Docker
- CONS : ditto

some of the above may be out-of-date

------------------------------------------------------------------------------
* initial setup for Plutus Playground local instance

To set up a local instance (assumes Nix already installed).

This worked for
- MacBook Pro (13-inch 2019, Four Thunderbolt 3 ports)
- Processor 2.8 GHz Quad-Core Intel Core i7
- Memory 16GB 2133 MHz LPDDR3
- nix (Nix) 2.5.1

from
- https://github.com/renzwo/cardano-plutus-apps-install-m1
- =ff71ab6ddd158105ef413f1c8d8cb29bec9714b3=

edit =/etc/nix/nix.conf= to contain

#+begin_comment
 (eepitch-shell)
 (eepitch-kill)
 (eepitch-shell)
#+end_comment

#+begin_src
export C=~/Cardano
#+end_src


#+begin_src
build-users-group = nixbld

substituters        = https://hydra.iohk.io https://iohk.cachix.org https://cache.nixos.org/
trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= iohk.cachix.org-1:DpRUyj7h7V830dp/i6Nti+NEO2/nhblbov/8MW7Rqoo= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=

system = x86_64-darwin
extra-platforms = x86_64-darwin aarch64-darwin

sandbox = false
extra-sandbox-paths = /System/Library/Frameworks /System/Library/PrivateFrameworks /usr/lib /private/tmp /private/var/tmp /usr/bin/env
experimental-features = nix-command
extra-experimental-features = flakes
#+end_src

restart mac

#+begin_src
mkdir ${C}
cd ${C}
git clone https://github.com/input-output-hk/plutus-apps
cd plutus-apps
git checkout 829a409ba34bae36c6d99f50e099b0a177d76ceb
# if segfault, try again:
nix-build -A plutus-playground.server
# if errors, try again
nix-build -A plutus-playground.client
nix-shell
cd plutus-playground-server
# if problems, try again
GC_DONT_GC=1 plutus-playground-server
# when success, will print:
plutus-playground-server: for development use only
[Info] Running: (Nothing,Webserver {_port = 8080, _maxInterpretationTime = 80s})
Initializing Context
Initializing Context
Warning: GITHUB_CLIENT_ID not set
Warning: GITHUB_CLIENT_SECRET not set
Warning: JWT_SIGNATURE not set
Interpreter ready
#+end_src

in another terminal

#+begin_src
cd ${C}/plutus-apps
nix-shell
sudo npm install -g npm
cd plutus-playground-client
GC_DONT_GC=1 npm run start
# when success, will print:
webpack compiled with 1 warning
â„¹ ï½¢wdmï½£: Compiled with warnings.
#+end_src

if the client takes to long, see renzwo about timeouts

in browser

#+begin_src
https://localhost:8009/
#+end_src

------------------------------------------------------------------------------
<<weekly-steps>>
* weekly steps (after doing above initial steps)

** pull and checkout tag

#+begin_src
cd ${C}/plutus-pioneer-program
git checkout main
git pull
# ?? == number of the week/lecture
cd ${C}/plutus-pioneer-program/code/week??
TAG=`cat ./cabal.project | grep -A 1 "https://github.com/input-output-hk/plutus-apps" | grep tag | cut -d':' -f2`
echo ${TAG}
cd ${C}/plutus-apps
git checkout main
git pull
git checkout ${TAG}
#+end_src

** =cabal repl=

To do =cabal repl= for a particular week:

#+begin_src
cd ${C}/plutus-apps
nix-shell
cd ${C}/plutus-pioneer-program/code/week??/
cabal clean
cabal update
cabal build
cabal repl
#+end_src

** playground

The following steps are only needed to use the playground.

They are not needed for using =cabal repl=.

#+begin_src
nix-build -A plutus-playground.server
nix-shell
cd plutus-playground-server/
plutus-playground-server

--------------------------

# in another terminal
cd ${C}/plutus-apps
nix-shell
cd plutus-playground-client
# start Plutus Playground Client
npm run start
#+end_src

------------------------------------------------------------------------------
* a problem and solution/hack

When I was trying to do =cabal repl= for Week4, I had the following problem:

#+begin_src
> cd ${C}/plutus-apps

> git checkout ea1bfc6a49ee731c67ada3bfb326ee798001701a
HEAD is now at ea1bfc6a4 SCP-3305 reverted #57 (#275)

> nix-shell
...

[nix-shell:~/plutus-apps]$ cd ../plutus-pioneer-program/code/week04/

# note: I also tried
# cabal clean; cabal update; cabal build
# before this next step, but ended up with the same problem

[nix-shell:~/plutus-pioneer-program/code/week04]$ cabal repl
Build profile: -w ghc-8.10.4.20210212 -O1
In order, the following will be built (use -v for more details):
 - cardano-ledger-shelley-0.1.0.0 (lib) (requires build)
 - plutus-core-0.1.0.0 (lib) (requires build)
 ...
Starting     plutus-core-0.1.0.0 (lib)
Starting     cardano-ledger-shelley-0.1.0.0 (lib)
Building     cardano-ledger-shelley-0.1.0.0 (lib)
Installing   cardano-ledger-shelley-0.1.0.0 (lib)
Completed    cardano-ledger-shelley-0.1.0.0 (lib)

Failed to build plutus-core-0.1.0.0. The failure occurred during the configure
step.
Build log (
/Users/hcarr/.cabal/logs/ghc-8.10.4.20210212/plts-cr-0.1.0.0-ae5e7239.log ):
Configuring library for plutus-core-0.1.0.0..
cabal: The program 'happy' version >=1.17.1 is required but the version of
/Users/hcarr/.cabal/store/ghc-8.10.4.20210212/hppy-1.20.0-a2383844/bin/happy
could not be determined.

cabal: Failed to build plutus-core-0.1.0.0 (which is required by
plutus-pioneer-program-week04-0.1.0.0). See the build log above for details.
#+end_src

So I tried to execute the =happy=. I see a complaint:

#+begin_src
> /Users/hcarr/.cabal/store/ghc-8.10.4.20210212/hppy-1.20.0-a2383844/bin/happy
dyld: Library not loaded: /nix/store/xxda2m8nqqrjygyppid1pff15kxf3fg4-libffi-3.4.2/lib/libffi.8.dylib
#+end_src

Looking in =/nix/store=, I see that =xxda...= does not exist.

I do not know how to make it exist.

But I see other versions of =libffi-3.4.2= are in the store, so I tried (yuck):

#+begin_src
> sudo ln -s /nix/store/4jm4isrbhbdx9wgkbsgkqgrdwqcyail3-libffi-3.4.2 /nix/store/xxda2m8nqqrjygyppid1pff15kxf3fg4-libffi-3.4.2
#+end_src

Then tried =happy= again:

#+begin_src
> /Users/hcarr/.cabal/store/ghc-8.10.4.20210212/hppy-1.20.0-a2383844/bin/happy
Usage: happy [OPTION...] file
...
#+end_src

Now =happy= is happy and =cabal build= and =cabal repl= work.

If anyone knows how to correctly install that particular hash version of =libffi=,
please let me know.

